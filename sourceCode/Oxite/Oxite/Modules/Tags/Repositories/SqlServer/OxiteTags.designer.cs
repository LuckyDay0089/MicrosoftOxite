#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Modules.Tags.Repositories.SqlServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxiteTagsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_Tag(oxite_Tag instance);
    partial void Updateoxite_Tag(oxite_Tag instance);
    partial void Deleteoxite_Tag(oxite_Tag instance);
    #endregion
		
		public OxiteTagsDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxiteTagsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteTagsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteTagsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteTagsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<oxite_Tag> oxite_Tags
		{
			get
			{
				return this.GetTable<oxite_Tag>();
			}
		}
	}
	
	[Table(Name="dbo.oxite_Tag")]
	public partial class oxite_Tag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParentTagID;
		
		private System.Guid _TagID;
		
		private string _TagName;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<oxite_Tag> _oxite_Tags;
		
		private EntityRef<oxite_Tag> _oxite_Tag1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentTagIDChanging(System.Guid value);
    partial void OnParentTagIDChanged();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    partial void OnTagNameChanging(string value);
    partial void OnTagNameChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public oxite_Tag()
		{
			this._oxite_Tags = new EntitySet<oxite_Tag>(new Action<oxite_Tag>(this.attach_oxite_Tags), new Action<oxite_Tag>(this.detach_oxite_Tags));
			this._oxite_Tag1 = default(EntityRef<oxite_Tag>);
			OnCreated();
		}
		
		[Column(Storage="_ParentTagID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentTagID
		{
			get
			{
				return this._ParentTagID;
			}
			set
			{
				if ((this._ParentTagID != value))
				{
					if (this._oxite_Tag1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentTagIDChanging(value);
					this.SendPropertyChanging();
					this._ParentTagID = value;
					this.SendPropertyChanged("ParentTagID");
					this.OnParentTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TagName
		{
			get
			{
				return this._TagName;
			}
			set
			{
				if ((this._TagName != value))
				{
					this.OnTagNameChanging(value);
					this.SendPropertyChanging();
					this._TagName = value;
					this.SendPropertyChanged("TagName");
					this.OnTagNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Tag_oxite_Tag", Storage="_oxite_Tags", ThisKey="TagID", OtherKey="ParentTagID")]
		public EntitySet<oxite_Tag> oxite_Tags
		{
			get
			{
				return this._oxite_Tags;
			}
			set
			{
				this._oxite_Tags.Assign(value);
			}
		}
		
		[Association(Name="oxite_Tag_oxite_Tag", Storage="_oxite_Tag1", ThisKey="ParentTagID", OtherKey="TagID", IsForeignKey=true)]
		public oxite_Tag oxite_Tag1
		{
			get
			{
				return this._oxite_Tag1.Entity;
			}
			set
			{
				oxite_Tag previousValue = this._oxite_Tag1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Tag1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Tag1.Entity = null;
						previousValue.oxite_Tags.Remove(this);
					}
					this._oxite_Tag1.Entity = value;
					if ((value != null))
					{
						value.oxite_Tags.Add(this);
						this._ParentTagID = value.TagID;
					}
					else
					{
						this._ParentTagID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Tag1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Tags(oxite_Tag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag1 = this;
		}
		
		private void detach_oxite_Tags(oxite_Tag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Tag1 = null;
		}
	}
}
#pragma warning restore 1591
