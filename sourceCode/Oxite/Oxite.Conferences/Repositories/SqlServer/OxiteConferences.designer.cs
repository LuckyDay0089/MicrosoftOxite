#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Modules.Conferences.Repositories.SqlServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxiteConferencesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_Conferences_Event(oxite_Conferences_Event instance);
    partial void Updateoxite_Conferences_Event(oxite_Conferences_Event instance);
    partial void Deleteoxite_Conferences_Event(oxite_Conferences_Event instance);
    partial void Insertoxite_Conferences_UserSchedule(oxite_Conferences_UserSchedule instance);
    partial void Updateoxite_Conferences_UserSchedule(oxite_Conferences_UserSchedule instance);
    partial void Deleteoxite_Conferences_UserSchedule(oxite_Conferences_UserSchedule instance);
    partial void Insertoxite_Conferences_ScheduleItem(oxite_Conferences_ScheduleItem instance);
    partial void Updateoxite_Conferences_ScheduleItem(oxite_Conferences_ScheduleItem instance);
    partial void Deleteoxite_Conferences_ScheduleItem(oxite_Conferences_ScheduleItem instance);
    partial void Insertoxite_Conferences_ScheduleItemFileRelationship(oxite_Conferences_ScheduleItemFileRelationship instance);
    partial void Updateoxite_Conferences_ScheduleItemFileRelationship(oxite_Conferences_ScheduleItemFileRelationship instance);
    partial void Deleteoxite_Conferences_ScheduleItemFileRelationship(oxite_Conferences_ScheduleItemFileRelationship instance);
    partial void Insertoxite_Conferences_ScheduleItemFlag(oxite_Conferences_ScheduleItemFlag instance);
    partial void Updateoxite_Conferences_ScheduleItemFlag(oxite_Conferences_ScheduleItemFlag instance);
    partial void Deleteoxite_Conferences_ScheduleItemFlag(oxite_Conferences_ScheduleItemFlag instance);
    partial void Insertoxite_Conferences_ScheduleItemUserRelationship(oxite_Conferences_ScheduleItemUserRelationship instance);
    partial void Updateoxite_Conferences_ScheduleItemUserRelationship(oxite_Conferences_ScheduleItemUserRelationship instance);
    partial void Deleteoxite_Conferences_ScheduleItemUserRelationship(oxite_Conferences_ScheduleItemUserRelationship instance);
    partial void Insertoxite_Conferences_ScheduleTimeSlot(oxite_Conferences_ScheduleTimeSlot instance);
    partial void Updateoxite_Conferences_ScheduleTimeSlot(oxite_Conferences_ScheduleTimeSlot instance);
    partial void Deleteoxite_Conferences_ScheduleTimeSlot(oxite_Conferences_ScheduleTimeSlot instance);
    partial void Insertoxite_Conferences_Speaker(oxite_Conferences_Speaker instance);
    partial void Updateoxite_Conferences_Speaker(oxite_Conferences_Speaker instance);
    partial void Deleteoxite_Conferences_Speaker(oxite_Conferences_Speaker instance);
    partial void Insertoxite_Conferences_ScheduleItemSpeakerRelationship(oxite_Conferences_ScheduleItemSpeakerRelationship instance);
    partial void Updateoxite_Conferences_ScheduleItemSpeakerRelationship(oxite_Conferences_ScheduleItemSpeakerRelationship instance);
    partial void Deleteoxite_Conferences_ScheduleItemSpeakerRelationship(oxite_Conferences_ScheduleItemSpeakerRelationship instance);
    partial void Insertoxite_Conferences_ScheduleItemTagRelationship(oxite_Conferences_ScheduleItemTagRelationship instance);
    partial void Updateoxite_Conferences_ScheduleItemTagRelationship(oxite_Conferences_ScheduleItemTagRelationship instance);
    partial void Deleteoxite_Conferences_ScheduleItemTagRelationship(oxite_Conferences_ScheduleItemTagRelationship instance);
    partial void Insertoxite_Comment(oxite_Comment instance);
    partial void Updateoxite_Comment(oxite_Comment instance);
    partial void Deleteoxite_Comment(oxite_Comment instance);
    partial void Insertoxite_Conferences_ScheduleItemCommentRelationship(oxite_Conferences_ScheduleItemCommentRelationship instance);
    partial void Updateoxite_Conferences_ScheduleItemCommentRelationship(oxite_Conferences_ScheduleItemCommentRelationship instance);
    partial void Deleteoxite_Conferences_ScheduleItemCommentRelationship(oxite_Conferences_ScheduleItemCommentRelationship instance);
    partial void Insertoxite_Language(oxite_Language instance);
    partial void Updateoxite_Language(oxite_Language instance);
    partial void Deleteoxite_Language(oxite_Language instance);
    partial void Insertoxite_User(oxite_User instance);
    partial void Updateoxite_User(oxite_User instance);
    partial void Deleteoxite_User(oxite_User instance);
    partial void Insertoxite_Conferences_ScheduleItemSubscriptionRelationship(oxite_Conferences_ScheduleItemSubscriptionRelationship instance);
    partial void Updateoxite_Conferences_ScheduleItemSubscriptionRelationship(oxite_Conferences_ScheduleItemSubscriptionRelationship instance);
    partial void Deleteoxite_Conferences_ScheduleItemSubscriptionRelationship(oxite_Conferences_ScheduleItemSubscriptionRelationship instance);
    partial void Insertoxite_Subscription(oxite_Subscription instance);
    partial void Updateoxite_Subscription(oxite_Subscription instance);
    partial void Deleteoxite_Subscription(oxite_Subscription instance);
    #endregion
		
		public OxiteConferencesDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxiteConferencesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteConferencesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteConferencesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteConferencesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<oxite_Conferences_Event> oxite_Conferences_Events
		{
			get
			{
				return this.GetTable<oxite_Conferences_Event>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_UserSchedule> oxite_Conferences_UserSchedules
		{
			get
			{
				return this.GetTable<oxite_Conferences_UserSchedule>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItem> oxite_Conferences_ScheduleItems
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItem>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItemFileRelationship> oxite_Conferences_ScheduleItemFileRelationships
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItemFileRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItemFlag> oxite_Conferences_ScheduleItemFlags
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItemFlag>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItemUserRelationship> oxite_Conferences_ScheduleItemUserRelationships
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItemUserRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleTimeSlot> oxite_Conferences_ScheduleTimeSlots
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleTimeSlot>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_Speaker> oxite_Conferences_Speakers
		{
			get
			{
				return this.GetTable<oxite_Conferences_Speaker>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItemSpeakerRelationship> oxite_Conferences_ScheduleItemSpeakerRelationships
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItemSpeakerRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItemTagRelationship> oxite_Conferences_ScheduleItemTagRelationships
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItemTagRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Comment> oxite_Comments
		{
			get
			{
				return this.GetTable<oxite_Comment>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItemCommentRelationship> oxite_Conferences_ScheduleItemCommentRelationships
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItemCommentRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Language> oxite_Languages
		{
			get
			{
				return this.GetTable<oxite_Language>();
			}
		}
		
		public System.Data.Linq.Table<oxite_User> oxite_Users
		{
			get
			{
				return this.GetTable<oxite_User>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Conferences_ScheduleItemSubscriptionRelationship> oxite_Conferences_ScheduleItemSubscriptionRelationships
		{
			get
			{
				return this.GetTable<oxite_Conferences_ScheduleItemSubscriptionRelationship>();
			}
		}
		
		public System.Data.Linq.Table<oxite_Subscription> oxite_Subscriptions
		{
			get
			{
				return this.GetTable<oxite_Subscription>();
			}
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_Event")]
	public partial class oxite_Conferences_Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EventID;
		
		private string _EventName;
		
		private string _EventDisplayName;
		
		private short _Year;
		
		private EntitySet<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItems;
		
		private EntitySet<oxite_Conferences_ScheduleTimeSlot> _oxite_Conferences_ScheduleTimeSlots;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(System.Guid value);
    partial void OnEventIDChanged();
    partial void OnEventNameChanging(string value);
    partial void OnEventNameChanged();
    partial void OnEventDisplayNameChanging(string value);
    partial void OnEventDisplayNameChanged();
    partial void OnYearChanging(short value);
    partial void OnYearChanged();
    #endregion
		
		public oxite_Conferences_Event()
		{
			this._oxite_Conferences_ScheduleItems = new EntitySet<oxite_Conferences_ScheduleItem>(new Action<oxite_Conferences_ScheduleItem>(this.attach_oxite_Conferences_ScheduleItems), new Action<oxite_Conferences_ScheduleItem>(this.detach_oxite_Conferences_ScheduleItems));
			this._oxite_Conferences_ScheduleTimeSlots = new EntitySet<oxite_Conferences_ScheduleTimeSlot>(new Action<oxite_Conferences_ScheduleTimeSlot>(this.attach_oxite_Conferences_ScheduleTimeSlots), new Action<oxite_Conferences_ScheduleTimeSlot>(this.detach_oxite_Conferences_ScheduleTimeSlots));
			OnCreated();
		}
		
		[Column(Storage="_EventID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[Column(Storage="_EventName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string EventName
		{
			get
			{
				return this._EventName;
			}
			set
			{
				if ((this._EventName != value))
				{
					this.OnEventNameChanging(value);
					this.SendPropertyChanging();
					this._EventName = value;
					this.SendPropertyChanged("EventName");
					this.OnEventNameChanged();
				}
			}
		}
		
		[Column(Storage="_EventDisplayName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EventDisplayName
		{
			get
			{
				return this._EventDisplayName;
			}
			set
			{
				if ((this._EventDisplayName != value))
				{
					this.OnEventDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._EventDisplayName = value;
					this.SendPropertyChanged("EventDisplayName");
					this.OnEventDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="SmallInt NOT NULL")]
		public short Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_Event_oxite_Conferences_ScheduleItem", Storage="_oxite_Conferences_ScheduleItems", ThisKey="EventID", OtherKey="EventID")]
		public EntitySet<oxite_Conferences_ScheduleItem> oxite_Conferences_ScheduleItems
		{
			get
			{
				return this._oxite_Conferences_ScheduleItems;
			}
			set
			{
				this._oxite_Conferences_ScheduleItems.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_Event_oxite_Conferences_ScheduleTimeSlot", Storage="_oxite_Conferences_ScheduleTimeSlots", ThisKey="EventID", OtherKey="EventID")]
		public EntitySet<oxite_Conferences_ScheduleTimeSlot> oxite_Conferences_ScheduleTimeSlots
		{
			get
			{
				return this._oxite_Conferences_ScheduleTimeSlots;
			}
			set
			{
				this._oxite_Conferences_ScheduleTimeSlots.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Conferences_ScheduleItems(oxite_Conferences_ScheduleItem entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_Event = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItems(oxite_Conferences_ScheduleItem entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_Event = null;
		}
		
		private void attach_oxite_Conferences_ScheduleTimeSlots(oxite_Conferences_ScheduleTimeSlot entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_Event = this;
		}
		
		private void detach_oxite_Conferences_ScheduleTimeSlots(oxite_Conferences_ScheduleTimeSlot entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_Event = null;
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_UserSchedule")]
	public partial class oxite_Conferences_UserSchedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private bool _IsPublic;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    #endregion
		
		public oxite_Conferences_UserSchedule()
		{
			OnCreated();
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItem")]
	public partial class oxite_Conferences_ScheduleItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EventID;
		
		private System.Guid _ScheduleItemID;
		
		private string _Title;
		
		private string _Body;
		
		private string _Location;
		
		private string _Type;
		
		private string _Code;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Slug;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<oxite_Conferences_ScheduleItemFileRelationship> _oxite_Conferences_ScheduleItemFileRelationships;
		
		private EntitySet<oxite_Conferences_ScheduleItemFlag> _oxite_Conferences_ScheduleItemFlags;
		
		private EntitySet<oxite_Conferences_ScheduleItemUserRelationship> _oxite_Conferences_ScheduleItemUserRelationships;
		
		private EntitySet<oxite_Conferences_ScheduleItemSpeakerRelationship> _oxite_Conferences_SpeakerItemSpeakerRelationships;
		
		private EntitySet<oxite_Conferences_ScheduleItemTagRelationship> _oxite_Conferences_ScheduleItemTagRelationships;
		
		private EntitySet<oxite_Conferences_ScheduleItemCommentRelationship> _oxite_Conferences_ScheduleItemCommentRelationships;
		
		private EntitySet<oxite_Conferences_ScheduleItemSubscriptionRelationship> _oxite_Conferences_ScheduleItemSubscriptionRelationships;
		
		private EntityRef<oxite_Conferences_Event> _oxite_Conferences_Event;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(System.Guid value);
    partial void OnEventIDChanged();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItem()
		{
			this._oxite_Conferences_ScheduleItemFileRelationships = new EntitySet<oxite_Conferences_ScheduleItemFileRelationship>(new Action<oxite_Conferences_ScheduleItemFileRelationship>(this.attach_oxite_Conferences_ScheduleItemFileRelationships), new Action<oxite_Conferences_ScheduleItemFileRelationship>(this.detach_oxite_Conferences_ScheduleItemFileRelationships));
			this._oxite_Conferences_ScheduleItemFlags = new EntitySet<oxite_Conferences_ScheduleItemFlag>(new Action<oxite_Conferences_ScheduleItemFlag>(this.attach_oxite_Conferences_ScheduleItemFlags), new Action<oxite_Conferences_ScheduleItemFlag>(this.detach_oxite_Conferences_ScheduleItemFlags));
			this._oxite_Conferences_ScheduleItemUserRelationships = new EntitySet<oxite_Conferences_ScheduleItemUserRelationship>(new Action<oxite_Conferences_ScheduleItemUserRelationship>(this.attach_oxite_Conferences_ScheduleItemUserRelationships), new Action<oxite_Conferences_ScheduleItemUserRelationship>(this.detach_oxite_Conferences_ScheduleItemUserRelationships));
			this._oxite_Conferences_SpeakerItemSpeakerRelationships = new EntitySet<oxite_Conferences_ScheduleItemSpeakerRelationship>(new Action<oxite_Conferences_ScheduleItemSpeakerRelationship>(this.attach_oxite_Conferences_SpeakerItemSpeakerRelationships), new Action<oxite_Conferences_ScheduleItemSpeakerRelationship>(this.detach_oxite_Conferences_SpeakerItemSpeakerRelationships));
			this._oxite_Conferences_ScheduleItemTagRelationships = new EntitySet<oxite_Conferences_ScheduleItemTagRelationship>(new Action<oxite_Conferences_ScheduleItemTagRelationship>(this.attach_oxite_Conferences_ScheduleItemTagRelationships), new Action<oxite_Conferences_ScheduleItemTagRelationship>(this.detach_oxite_Conferences_ScheduleItemTagRelationships));
			this._oxite_Conferences_ScheduleItemCommentRelationships = new EntitySet<oxite_Conferences_ScheduleItemCommentRelationship>(new Action<oxite_Conferences_ScheduleItemCommentRelationship>(this.attach_oxite_Conferences_ScheduleItemCommentRelationships), new Action<oxite_Conferences_ScheduleItemCommentRelationship>(this.detach_oxite_Conferences_ScheduleItemCommentRelationships));
			this._oxite_Conferences_ScheduleItemSubscriptionRelationships = new EntitySet<oxite_Conferences_ScheduleItemSubscriptionRelationship>(new Action<oxite_Conferences_ScheduleItemSubscriptionRelationship>(this.attach_oxite_Conferences_ScheduleItemSubscriptionRelationships), new Action<oxite_Conferences_ScheduleItemSubscriptionRelationship>(this.detach_oxite_Conferences_ScheduleItemSubscriptionRelationships));
			this._oxite_Conferences_Event = default(EntityRef<oxite_Conferences_Event>);
			OnCreated();
		}
		
		[Column(Storage="_EventID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._oxite_Conferences_Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_Location", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Slug", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemFileRelationship", Storage="_oxite_Conferences_ScheduleItemFileRelationships", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID")]
		public EntitySet<oxite_Conferences_ScheduleItemFileRelationship> oxite_Conferences_ScheduleItemFileRelationships
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemFileRelationships;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemFileRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemFlag", Storage="_oxite_Conferences_ScheduleItemFlags", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID")]
		public EntitySet<oxite_Conferences_ScheduleItemFlag> oxite_Conferences_ScheduleItemFlags
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemFlags;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemFlags.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemUserRelationship", Storage="_oxite_Conferences_ScheduleItemUserRelationships", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID")]
		public EntitySet<oxite_Conferences_ScheduleItemUserRelationship> oxite_Conferences_ScheduleItemUserRelationships
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemUserRelationships;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemUserRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemSpeakerRelationship", Storage="_oxite_Conferences_SpeakerItemSpeakerRelationships", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID")]
		public EntitySet<oxite_Conferences_ScheduleItemSpeakerRelationship> oxite_Conferences_ScheduleItemSpeakerRelationships
		{
			get
			{
				return this._oxite_Conferences_SpeakerItemSpeakerRelationships;
			}
			set
			{
				this._oxite_Conferences_SpeakerItemSpeakerRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemTagRelationship", Storage="_oxite_Conferences_ScheduleItemTagRelationships", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID")]
		public EntitySet<oxite_Conferences_ScheduleItemTagRelationship> oxite_Conferences_ScheduleItemTagRelationships
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemTagRelationships;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemTagRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemCommentRelationship", Storage="_oxite_Conferences_ScheduleItemCommentRelationships", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID")]
		public EntitySet<oxite_Conferences_ScheduleItemCommentRelationship> oxite_Conferences_ScheduleItemCommentRelationships
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemCommentRelationships;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemCommentRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemSubscriptionRelation" +
			"ship", Storage="_oxite_Conferences_ScheduleItemSubscriptionRelationships", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID")]
		public EntitySet<oxite_Conferences_ScheduleItemSubscriptionRelationship> oxite_Conferences_ScheduleItemSubscriptionRelationships
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemSubscriptionRelationships;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemSubscriptionRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Conferences_Event_oxite_Conferences_ScheduleItem", Storage="_oxite_Conferences_Event", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true)]
		public oxite_Conferences_Event oxite_Conferences_Event
		{
			get
			{
				return this._oxite_Conferences_Event.Entity;
			}
			set
			{
				oxite_Conferences_Event previousValue = this._oxite_Conferences_Event.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_Event.Entity = null;
						previousValue.oxite_Conferences_ScheduleItems.Remove(this);
					}
					this._oxite_Conferences_Event.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItems.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_Event");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Conferences_ScheduleItemFileRelationships(oxite_Conferences_ScheduleItemFileRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemFileRelationships(oxite_Conferences_ScheduleItemFileRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = null;
		}
		
		private void attach_oxite_Conferences_ScheduleItemFlags(oxite_Conferences_ScheduleItemFlag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemFlags(oxite_Conferences_ScheduleItemFlag entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = null;
		}
		
		private void attach_oxite_Conferences_ScheduleItemUserRelationships(oxite_Conferences_ScheduleItemUserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemUserRelationships(oxite_Conferences_ScheduleItemUserRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = null;
		}
		
		private void attach_oxite_Conferences_SpeakerItemSpeakerRelationships(oxite_Conferences_ScheduleItemSpeakerRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = this;
		}
		
		private void detach_oxite_Conferences_SpeakerItemSpeakerRelationships(oxite_Conferences_ScheduleItemSpeakerRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = null;
		}
		
		private void attach_oxite_Conferences_ScheduleItemTagRelationships(oxite_Conferences_ScheduleItemTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemTagRelationships(oxite_Conferences_ScheduleItemTagRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = null;
		}
		
		private void attach_oxite_Conferences_ScheduleItemCommentRelationships(oxite_Conferences_ScheduleItemCommentRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemCommentRelationships(oxite_Conferences_ScheduleItemCommentRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = null;
		}
		
		private void attach_oxite_Conferences_ScheduleItemSubscriptionRelationships(oxite_Conferences_ScheduleItemSubscriptionRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemSubscriptionRelationships(oxite_Conferences_ScheduleItemSubscriptionRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_ScheduleItem = null;
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItemFileRelationship")]
	public partial class oxite_Conferences_ScheduleItemFileRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleItemID;
		
		private System.Guid _FileID;
		
		private EntityRef<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnFileIDChanging(System.Guid value);
    partial void OnFileIDChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItemFileRelationship()
		{
			this._oxite_Conferences_ScheduleItem = default(EntityRef<oxite_Conferences_ScheduleItem>);
			OnCreated();
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					if (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_FileID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemFileRelationship", Storage="_oxite_Conferences_ScheduleItem", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID", IsForeignKey=true)]
		public oxite_Conferences_ScheduleItem oxite_Conferences_ScheduleItem
		{
			get
			{
				return this._oxite_Conferences_ScheduleItem.Entity;
			}
			set
			{
				oxite_Conferences_ScheduleItem previousValue = this._oxite_Conferences_ScheduleItem.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_ScheduleItem.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemFileRelationships.Remove(this);
					}
					this._oxite_Conferences_ScheduleItem.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemFileRelationships.Add(this);
						this._ScheduleItemID = value.ScheduleItemID;
					}
					else
					{
						this._ScheduleItemID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_ScheduleItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItemFlag")]
	public partial class oxite_Conferences_ScheduleItemFlag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleItemID;
		
		private string _FlagType;
		
		private EntityRef<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnFlagTypeChanging(string value);
    partial void OnFlagTypeChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItemFlag()
		{
			this._oxite_Conferences_ScheduleItem = default(EntityRef<oxite_Conferences_ScheduleItem>);
			OnCreated();
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					if (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_FlagType", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string FlagType
		{
			get
			{
				return this._FlagType;
			}
			set
			{
				if ((this._FlagType != value))
				{
					this.OnFlagTypeChanging(value);
					this.SendPropertyChanging();
					this._FlagType = value;
					this.SendPropertyChanged("FlagType");
					this.OnFlagTypeChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemFlag", Storage="_oxite_Conferences_ScheduleItem", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID", IsForeignKey=true)]
		public oxite_Conferences_ScheduleItem oxite_Conferences_ScheduleItem
		{
			get
			{
				return this._oxite_Conferences_ScheduleItem.Entity;
			}
			set
			{
				oxite_Conferences_ScheduleItem previousValue = this._oxite_Conferences_ScheduleItem.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_ScheduleItem.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemFlags.Remove(this);
					}
					this._oxite_Conferences_ScheduleItem.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemFlags.Add(this);
						this._ScheduleItemID = value.ScheduleItemID;
					}
					else
					{
						this._ScheduleItemID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_ScheduleItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItemUserRelationship")]
	public partial class oxite_Conferences_ScheduleItemUserRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleItemID;
		
		private System.Guid _UserID;
		
		private EntityRef<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItemUserRelationship()
		{
			this._oxite_Conferences_ScheduleItem = default(EntityRef<oxite_Conferences_ScheduleItem>);
			OnCreated();
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					if (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemUserRelationship", Storage="_oxite_Conferences_ScheduleItem", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID", IsForeignKey=true)]
		public oxite_Conferences_ScheduleItem oxite_Conferences_ScheduleItem
		{
			get
			{
				return this._oxite_Conferences_ScheduleItem.Entity;
			}
			set
			{
				oxite_Conferences_ScheduleItem previousValue = this._oxite_Conferences_ScheduleItem.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_ScheduleItem.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemUserRelationships.Remove(this);
					}
					this._oxite_Conferences_ScheduleItem.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemUserRelationships.Add(this);
						this._ScheduleItemID = value.ScheduleItemID;
					}
					else
					{
						this._ScheduleItemID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_ScheduleItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleTimeSlot")]
	public partial class oxite_Conferences_ScheduleTimeSlot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EventID;
		
		private System.Guid _ScheduleTimeSlotID;
		
		private System.DateTime _StartTime;
		
		private System.DateTime _EndTime;
		
		private string _Description;
		
		private EntityRef<oxite_Conferences_Event> _oxite_Conferences_Event;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIDChanging(System.Guid value);
    partial void OnEventIDChanged();
    partial void OnScheduleTimeSlotIDChanging(System.Guid value);
    partial void OnScheduleTimeSlotIDChanged();
    partial void OnStartTimeChanging(System.DateTime value);
    partial void OnStartTimeChanged();
    partial void OnEndTimeChanging(System.DateTime value);
    partial void OnEndTimeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public oxite_Conferences_ScheduleTimeSlot()
		{
			this._oxite_Conferences_Event = default(EntityRef<oxite_Conferences_Event>);
			OnCreated();
		}
		
		[Column(Storage="_EventID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EventID
		{
			get
			{
				return this._EventID;
			}
			set
			{
				if ((this._EventID != value))
				{
					if (this._oxite_Conferences_Event.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEventIDChanging(value);
					this.SendPropertyChanging();
					this._EventID = value;
					this.SendPropertyChanged("EventID");
					this.OnEventIDChanged();
				}
			}
		}
		
		[Column(Storage="_ScheduleTimeSlotID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleTimeSlotID
		{
			get
			{
				return this._ScheduleTimeSlotID;
			}
			set
			{
				if ((this._ScheduleTimeSlotID != value))
				{
					this.OnScheduleTimeSlotIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleTimeSlotID = value;
					this.SendPropertyChanged("ScheduleTimeSlotID");
					this.OnScheduleTimeSlotIDChanged();
				}
			}
		}
		
		[Column(Storage="_StartTime", DbType="DateTime NOT NULL")]
		public System.DateTime StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[Column(Storage="_EndTime", DbType="DateTime NOT NULL")]
		public System.DateTime EndTime
		{
			get
			{
				return this._EndTime;
			}
			set
			{
				if ((this._EndTime != value))
				{
					this.OnEndTimeChanging(value);
					this.SendPropertyChanging();
					this._EndTime = value;
					this.SendPropertyChanged("EndTime");
					this.OnEndTimeChanged();
				}
			}
		}
		
		[Column(Storage="_Description", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_Event_oxite_Conferences_ScheduleTimeSlot", Storage="_oxite_Conferences_Event", ThisKey="EventID", OtherKey="EventID", IsForeignKey=true)]
		public oxite_Conferences_Event oxite_Conferences_Event
		{
			get
			{
				return this._oxite_Conferences_Event.Entity;
			}
			set
			{
				oxite_Conferences_Event previousValue = this._oxite_Conferences_Event.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_Event.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_Event.Entity = null;
						previousValue.oxite_Conferences_ScheduleTimeSlots.Remove(this);
					}
					this._oxite_Conferences_Event.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleTimeSlots.Add(this);
						this._EventID = value.EventID;
					}
					else
					{
						this._EventID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_Event");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_Speaker")]
	public partial class oxite_Conferences_Speaker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SpeakerID;
		
		private string _SpeakerName;
		
		private string _SpeakerDisplayName;
		
		private string _Bio;
		
		private EntitySet<oxite_Conferences_ScheduleItemSpeakerRelationship> _oxite_Conferences_SpeakerItemSpeakerRelationships;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpeakerIDChanging(System.Guid value);
    partial void OnSpeakerIDChanged();
    partial void OnSpeakerNameChanging(string value);
    partial void OnSpeakerNameChanged();
    partial void OnSpeakerDisplayNameChanging(string value);
    partial void OnSpeakerDisplayNameChanged();
    partial void OnBioChanging(string value);
    partial void OnBioChanged();
    #endregion
		
		public oxite_Conferences_Speaker()
		{
			this._oxite_Conferences_SpeakerItemSpeakerRelationships = new EntitySet<oxite_Conferences_ScheduleItemSpeakerRelationship>(new Action<oxite_Conferences_ScheduleItemSpeakerRelationship>(this.attach_oxite_Conferences_SpeakerItemSpeakerRelationships), new Action<oxite_Conferences_ScheduleItemSpeakerRelationship>(this.detach_oxite_Conferences_SpeakerItemSpeakerRelationships));
			OnCreated();
		}
		
		[Column(Storage="_SpeakerID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SpeakerID
		{
			get
			{
				return this._SpeakerID;
			}
			set
			{
				if ((this._SpeakerID != value))
				{
					this.OnSpeakerIDChanging(value);
					this.SendPropertyChanging();
					this._SpeakerID = value;
					this.SendPropertyChanged("SpeakerID");
					this.OnSpeakerIDChanged();
				}
			}
		}
		
		[Column(Storage="_SpeakerName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SpeakerName
		{
			get
			{
				return this._SpeakerName;
			}
			set
			{
				if ((this._SpeakerName != value))
				{
					this.OnSpeakerNameChanging(value);
					this.SendPropertyChanging();
					this._SpeakerName = value;
					this.SendPropertyChanged("SpeakerName");
					this.OnSpeakerNameChanged();
				}
			}
		}
		
		[Column(Storage="_SpeakerDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SpeakerDisplayName
		{
			get
			{
				return this._SpeakerDisplayName;
			}
			set
			{
				if ((this._SpeakerDisplayName != value))
				{
					this.OnSpeakerDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._SpeakerDisplayName = value;
					this.SendPropertyChanged("SpeakerDisplayName");
					this.OnSpeakerDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Bio", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Bio
		{
			get
			{
				return this._Bio;
			}
			set
			{
				if ((this._Bio != value))
				{
					this.OnBioChanging(value);
					this.SendPropertyChanging();
					this._Bio = value;
					this.SendPropertyChanged("Bio");
					this.OnBioChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_Speaker_oxite_Conferences_ScheduleItemSpeakerRelationship", Storage="_oxite_Conferences_SpeakerItemSpeakerRelationships", ThisKey="SpeakerID", OtherKey="SpeakerID")]
		public EntitySet<oxite_Conferences_ScheduleItemSpeakerRelationship> oxite_Conferences_ScheduleItemSpeakerRelationships
		{
			get
			{
				return this._oxite_Conferences_SpeakerItemSpeakerRelationships;
			}
			set
			{
				this._oxite_Conferences_SpeakerItemSpeakerRelationships.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Conferences_SpeakerItemSpeakerRelationships(oxite_Conferences_ScheduleItemSpeakerRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_Speaker = this;
		}
		
		private void detach_oxite_Conferences_SpeakerItemSpeakerRelationships(oxite_Conferences_ScheduleItemSpeakerRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Conferences_Speaker = null;
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItemSpeakerRelationship")]
	public partial class oxite_Conferences_ScheduleItemSpeakerRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleItemID;
		
		private System.Guid _SpeakerID;
		
		private EntityRef<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItem;
		
		private EntityRef<oxite_Conferences_Speaker> _oxite_Conferences_Speaker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnSpeakerIDChanging(System.Guid value);
    partial void OnSpeakerIDChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItemSpeakerRelationship()
		{
			this._oxite_Conferences_ScheduleItem = default(EntityRef<oxite_Conferences_ScheduleItem>);
			this._oxite_Conferences_Speaker = default(EntityRef<oxite_Conferences_Speaker>);
			OnCreated();
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					if (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_SpeakerID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SpeakerID
		{
			get
			{
				return this._SpeakerID;
			}
			set
			{
				if ((this._SpeakerID != value))
				{
					if (this._oxite_Conferences_Speaker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpeakerIDChanging(value);
					this.SendPropertyChanging();
					this._SpeakerID = value;
					this.SendPropertyChanged("SpeakerID");
					this.OnSpeakerIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemSpeakerRelationship", Storage="_oxite_Conferences_ScheduleItem", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID", IsForeignKey=true)]
		public oxite_Conferences_ScheduleItem oxite_Conferences_ScheduleItem
		{
			get
			{
				return this._oxite_Conferences_ScheduleItem.Entity;
			}
			set
			{
				oxite_Conferences_ScheduleItem previousValue = this._oxite_Conferences_ScheduleItem.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_ScheduleItem.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemSpeakerRelationships.Remove(this);
					}
					this._oxite_Conferences_ScheduleItem.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemSpeakerRelationships.Add(this);
						this._ScheduleItemID = value.ScheduleItemID;
					}
					else
					{
						this._ScheduleItemID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_ScheduleItem");
				}
			}
		}
		
		[Association(Name="oxite_Conferences_Speaker_oxite_Conferences_ScheduleItemSpeakerRelationship", Storage="_oxite_Conferences_Speaker", ThisKey="SpeakerID", OtherKey="SpeakerID", IsForeignKey=true)]
		public oxite_Conferences_Speaker oxite_Conferences_Speaker
		{
			get
			{
				return this._oxite_Conferences_Speaker.Entity;
			}
			set
			{
				oxite_Conferences_Speaker previousValue = this._oxite_Conferences_Speaker.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_Speaker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_Speaker.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemSpeakerRelationships.Remove(this);
					}
					this._oxite_Conferences_Speaker.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemSpeakerRelationships.Add(this);
						this._SpeakerID = value.SpeakerID;
					}
					else
					{
						this._SpeakerID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_Speaker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItemTagRelationship")]
	public partial class oxite_Conferences_ScheduleItemTagRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleItemID;
		
		private System.Guid _TagID;
		
		private string _TagDisplayName;
		
		private EntityRef<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnTagIDChanging(System.Guid value);
    partial void OnTagIDChanged();
    partial void OnTagDisplayNameChanging(string value);
    partial void OnTagDisplayNameChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItemTagRelationship()
		{
			this._oxite_Conferences_ScheduleItem = default(EntityRef<oxite_Conferences_ScheduleItem>);
			OnCreated();
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					if (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TagID
		{
			get
			{
				return this._TagID;
			}
			set
			{
				if ((this._TagID != value))
				{
					this.OnTagIDChanging(value);
					this.SendPropertyChanging();
					this._TagID = value;
					this.SendPropertyChanged("TagID");
					this.OnTagIDChanged();
				}
			}
		}
		
		[Column(Storage="_TagDisplayName", DbType="NVarChar(MAX)")]
		public string TagDisplayName
		{
			get
			{
				return this._TagDisplayName;
			}
			set
			{
				if ((this._TagDisplayName != value))
				{
					this.OnTagDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._TagDisplayName = value;
					this.SendPropertyChanged("TagDisplayName");
					this.OnTagDisplayNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemTagRelationship", Storage="_oxite_Conferences_ScheduleItem", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID", IsForeignKey=true)]
		public oxite_Conferences_ScheduleItem oxite_Conferences_ScheduleItem
		{
			get
			{
				return this._oxite_Conferences_ScheduleItem.Entity;
			}
			set
			{
				oxite_Conferences_ScheduleItem previousValue = this._oxite_Conferences_ScheduleItem.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_ScheduleItem.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemTagRelationships.Remove(this);
					}
					this._oxite_Conferences_ScheduleItem.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemTagRelationships.Add(this);
						this._ScheduleItemID = value.ScheduleItemID;
					}
					else
					{
						this._ScheduleItemID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_ScheduleItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Comment")]
	public partial class oxite_Comment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ParentCommentID;
		
		private System.Guid _CommentID;
		
		private System.Guid _CreatorUserID;
		
		private string _CreatorName;
		
		private string _CreatorEmail;
		
		private string _CreatorHashedEmail;
		
		private string _CreatorUrl;
		
		private System.Guid _LanguageID;
		
		private long _CreatorIP;
		
		private string _UserAgent;
		
		private string _Body;
		
		private byte _State;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntitySet<oxite_Conferences_ScheduleItemCommentRelationship> _oxite_Conferences_ScheduleItemCommentRelationships;
		
		private EntityRef<oxite_Comment> _oxite_Comment1;
		
		private EntityRef<oxite_Language> _oxite_Language;
		
		private EntityRef<oxite_User> _oxite_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnParentCommentIDChanging(System.Guid value);
    partial void OnParentCommentIDChanged();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    partial void OnCreatorUserIDChanging(System.Guid value);
    partial void OnCreatorUserIDChanged();
    partial void OnCreatorNameChanging(string value);
    partial void OnCreatorNameChanged();
    partial void OnCreatorEmailChanging(string value);
    partial void OnCreatorEmailChanged();
    partial void OnCreatorHashedEmailChanging(string value);
    partial void OnCreatorHashedEmailChanged();
    partial void OnCreatorUrlChanging(string value);
    partial void OnCreatorUrlChanged();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnCreatorIPChanging(long value);
    partial void OnCreatorIPChanged();
    partial void OnUserAgentChanging(string value);
    partial void OnUserAgentChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnStateChanging(byte value);
    partial void OnStateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public oxite_Comment()
		{
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Conferences_ScheduleItemCommentRelationships = new EntitySet<oxite_Conferences_ScheduleItemCommentRelationship>(new Action<oxite_Conferences_ScheduleItemCommentRelationship>(this.attach_oxite_Conferences_ScheduleItemCommentRelationships), new Action<oxite_Conferences_ScheduleItemCommentRelationship>(this.detach_oxite_Conferences_ScheduleItemCommentRelationships));
			this._oxite_Comment1 = default(EntityRef<oxite_Comment>);
			this._oxite_Language = default(EntityRef<oxite_Language>);
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[Column(Storage="_ParentCommentID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ParentCommentID
		{
			get
			{
				return this._ParentCommentID;
			}
			set
			{
				if ((this._ParentCommentID != value))
				{
					if (this._oxite_Comment1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentCommentIDChanging(value);
					this.SendPropertyChanging();
					this._ParentCommentID = value;
					this.SendPropertyChanged("ParentCommentID");
					this.OnParentCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CreatorUserID
		{
			get
			{
				return this._CreatorUserID;
			}
			set
			{
				if ((this._CreatorUserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatorUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatorUserID = value;
					this.SendPropertyChanged("CreatorUserID");
					this.OnCreatorUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorName", DbType="NVarChar(50)")]
		public string CreatorName
		{
			get
			{
				return this._CreatorName;
			}
			set
			{
				if ((this._CreatorName != value))
				{
					this.OnCreatorNameChanging(value);
					this.SendPropertyChanging();
					this._CreatorName = value;
					this.SendPropertyChanged("CreatorName");
					this.OnCreatorNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorEmail", DbType="NVarChar(100)")]
		public string CreatorEmail
		{
			get
			{
				return this._CreatorEmail;
			}
			set
			{
				if ((this._CreatorEmail != value))
				{
					this.OnCreatorEmailChanging(value);
					this.SendPropertyChanging();
					this._CreatorEmail = value;
					this.SendPropertyChanged("CreatorEmail");
					this.OnCreatorEmailChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorHashedEmail", DbType="NVarChar(200)")]
		public string CreatorHashedEmail
		{
			get
			{
				return this._CreatorHashedEmail;
			}
			set
			{
				if ((this._CreatorHashedEmail != value))
				{
					this.OnCreatorHashedEmailChanging(value);
					this.SendPropertyChanging();
					this._CreatorHashedEmail = value;
					this.SendPropertyChanged("CreatorHashedEmail");
					this.OnCreatorHashedEmailChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorUrl", DbType="NVarChar(300)")]
		public string CreatorUrl
		{
			get
			{
				return this._CreatorUrl;
			}
			set
			{
				if ((this._CreatorUrl != value))
				{
					this.OnCreatorUrlChanging(value);
					this.SendPropertyChanging();
					this._CreatorUrl = value;
					this.SendPropertyChanged("CreatorUrl");
					this.OnCreatorUrlChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					if (this._oxite_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatorIP", DbType="BigInt NOT NULL")]
		public long CreatorIP
		{
			get
			{
				return this._CreatorIP;
			}
			set
			{
				if ((this._CreatorIP != value))
				{
					this.OnCreatorIPChanging(value);
					this.SendPropertyChanging();
					this._CreatorIP = value;
					this.SendPropertyChanged("CreatorIP");
					this.OnCreatorIPChanged();
				}
			}
		}
		
		[Column(Storage="_UserAgent", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string UserAgent
		{
			get
			{
				return this._UserAgent;
			}
			set
			{
				if ((this._UserAgent != value))
				{
					this.OnUserAgentChanging(value);
					this.SendPropertyChanging();
					this._UserAgent = value;
					this.SendPropertyChanged("UserAgent");
					this.OnUserAgentChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_State", DbType="TinyInt NOT NULL")]
		public byte State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[Association(Name="oxite_Comment_oxite_Comment", Storage="_oxite_Comments", ThisKey="CommentID", OtherKey="ParentCommentID")]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Comment_oxite_Conferences_ScheduleItemCommentRelationship", Storage="_oxite_Conferences_ScheduleItemCommentRelationships", ThisKey="CommentID", OtherKey="CommentID")]
		public EntitySet<oxite_Conferences_ScheduleItemCommentRelationship> oxite_Conferences_ScheduleItemCommentRelationships
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemCommentRelationships;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemCommentRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_Comment_oxite_Comment", Storage="_oxite_Comment1", ThisKey="ParentCommentID", OtherKey="CommentID", IsForeignKey=true)]
		public oxite_Comment oxite_Comment1
		{
			get
			{
				return this._oxite_Comment1.Entity;
			}
			set
			{
				oxite_Comment previousValue = this._oxite_Comment1.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Comment1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Comment1.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_Comment1.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._ParentCommentID = value.CommentID;
					}
					else
					{
						this._ParentCommentID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Comment1");
				}
			}
		}
		
		[Association(Name="oxite_Language_oxite_Comment", Storage="_oxite_Language", ThisKey="LanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public oxite_Language oxite_Language
		{
			get
			{
				return this._oxite_Language.Entity;
			}
			set
			{
				oxite_Language previousValue = this._oxite_Language.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Language.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_Language.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._LanguageID = value.LanguageID;
					}
					else
					{
						this._LanguageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Language");
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_Comment", Storage="_oxite_User", ThisKey="CreatorUserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Comments.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Comments.Add(this);
						this._CreatorUserID = value.UserID;
					}
					else
					{
						this._CreatorUserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment1 = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment1 = null;
		}
		
		private void attach_oxite_Conferences_ScheduleItemCommentRelationships(oxite_Conferences_ScheduleItemCommentRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemCommentRelationships(oxite_Conferences_ScheduleItemCommentRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Comment = null;
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItemCommentRelationship")]
	public partial class oxite_Conferences_ScheduleItemCommentRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleItemID;
		
		private System.Guid _CommentID;
		
		private string _Slug;
		
		private EntityRef<oxite_Comment> _oxite_Comment;
		
		private EntityRef<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnCommentIDChanging(System.Guid value);
    partial void OnCommentIDChanged();
    partial void OnSlugChanging(string value);
    partial void OnSlugChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItemCommentRelationship()
		{
			this._oxite_Comment = default(EntityRef<oxite_Comment>);
			this._oxite_Conferences_ScheduleItem = default(EntityRef<oxite_Conferences_ScheduleItem>);
			OnCreated();
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					if (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_CommentID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._oxite_Comment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[Column(Storage="_Slug", DbType="Char(5) NOT NULL", CanBeNull=false)]
		public string Slug
		{
			get
			{
				return this._Slug;
			}
			set
			{
				if ((this._Slug != value))
				{
					this.OnSlugChanging(value);
					this.SendPropertyChanging();
					this._Slug = value;
					this.SendPropertyChanged("Slug");
					this.OnSlugChanged();
				}
			}
		}
		
		[Association(Name="oxite_Comment_oxite_Conferences_ScheduleItemCommentRelationship", Storage="_oxite_Comment", ThisKey="CommentID", OtherKey="CommentID", IsForeignKey=true)]
		public oxite_Comment oxite_Comment
		{
			get
			{
				return this._oxite_Comment.Entity;
			}
			set
			{
				oxite_Comment previousValue = this._oxite_Comment.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Comment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Comment.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemCommentRelationships.Remove(this);
					}
					this._oxite_Comment.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemCommentRelationships.Add(this);
						this._CommentID = value.CommentID;
					}
					else
					{
						this._CommentID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Comment");
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemCommentRelationship", Storage="_oxite_Conferences_ScheduleItem", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID", IsForeignKey=true)]
		public oxite_Conferences_ScheduleItem oxite_Conferences_ScheduleItem
		{
			get
			{
				return this._oxite_Conferences_ScheduleItem.Entity;
			}
			set
			{
				oxite_Conferences_ScheduleItem previousValue = this._oxite_Conferences_ScheduleItem.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_ScheduleItem.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemCommentRelationships.Remove(this);
					}
					this._oxite_Conferences_ScheduleItem.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemCommentRelationships.Add(this);
						this._ScheduleItemID = value.ScheduleItemID;
					}
					else
					{
						this._ScheduleItemID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_ScheduleItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Language")]
	public partial class oxite_Language : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LanguageID;
		
		private string _LanguageName;
		
		private string _LanguageDisplayName;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntitySet<oxite_User> _oxite_Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLanguageIDChanging(System.Guid value);
    partial void OnLanguageIDChanged();
    partial void OnLanguageNameChanging(string value);
    partial void OnLanguageNameChanged();
    partial void OnLanguageDisplayNameChanging(string value);
    partial void OnLanguageDisplayNameChanged();
    #endregion
		
		public oxite_Language()
		{
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Users = new EntitySet<oxite_User>(new Action<oxite_User>(this.attach_oxite_Users), new Action<oxite_User>(this.detach_oxite_Users));
			OnCreated();
		}
		
		[Column(Storage="_LanguageID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LanguageID
		{
			get
			{
				return this._LanguageID;
			}
			set
			{
				if ((this._LanguageID != value))
				{
					this.OnLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._LanguageID = value;
					this.SendPropertyChanged("LanguageID");
					this.OnLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageName", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string LanguageName
		{
			get
			{
				return this._LanguageName;
			}
			set
			{
				if ((this._LanguageName != value))
				{
					this.OnLanguageNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageName = value;
					this.SendPropertyChanged("LanguageName");
					this.OnLanguageNameChanged();
				}
			}
		}
		
		[Column(Storage="_LanguageDisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LanguageDisplayName
		{
			get
			{
				return this._LanguageDisplayName;
			}
			set
			{
				if ((this._LanguageDisplayName != value))
				{
					this.OnLanguageDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._LanguageDisplayName = value;
					this.SendPropertyChanged("LanguageDisplayName");
					this.OnLanguageDisplayNameChanged();
				}
			}
		}
		
		[Association(Name="oxite_Language_oxite_Comment", Storage="_oxite_Comments", ThisKey="LanguageID", OtherKey="LanguageID")]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_Language_oxite_User", Storage="_oxite_Users", ThisKey="LanguageID", OtherKey="DefaultLanguageID")]
		public EntitySet<oxite_User> oxite_Users
		{
			get
			{
				return this._oxite_Users;
			}
			set
			{
				this._oxite_Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = null;
		}
		
		private void attach_oxite_Users(oxite_User entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = this;
		}
		
		private void detach_oxite_Users(oxite_User entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Language = null;
		}
	}
	
	[Table(Name="dbo.oxite_User")]
	public partial class oxite_User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _UserID;
		
		private string _Username;
		
		private string _DisplayName;
		
		private string _Email;
		
		private string _HashedEmail;
		
		private System.Guid _DefaultLanguageID;
		
		private byte _Status;
		
		private EntitySet<oxite_Comment> _oxite_Comments;
		
		private EntitySet<oxite_Subscription> _oxite_Subscriptions;
		
		private EntityRef<oxite_Language> _oxite_Language;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnHashedEmailChanging(string value);
    partial void OnHashedEmailChanged();
    partial void OnDefaultLanguageIDChanging(System.Guid value);
    partial void OnDefaultLanguageIDChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    #endregion
		
		public oxite_User()
		{
			this._oxite_Comments = new EntitySet<oxite_Comment>(new Action<oxite_Comment>(this.attach_oxite_Comments), new Action<oxite_Comment>(this.detach_oxite_Comments));
			this._oxite_Subscriptions = new EntitySet<oxite_Subscription>(new Action<oxite_Subscription>(this.attach_oxite_Subscriptions), new Action<oxite_Subscription>(this.detach_oxite_Subscriptions));
			this._oxite_Language = default(EntityRef<oxite_Language>);
			OnCreated();
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Username", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[Column(Storage="_DisplayName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Storage="_HashedEmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string HashedEmail
		{
			get
			{
				return this._HashedEmail;
			}
			set
			{
				if ((this._HashedEmail != value))
				{
					this.OnHashedEmailChanging(value);
					this.SendPropertyChanging();
					this._HashedEmail = value;
					this.SendPropertyChanged("HashedEmail");
					this.OnHashedEmailChanged();
				}
			}
		}
		
		[Column(Storage="_DefaultLanguageID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DefaultLanguageID
		{
			get
			{
				return this._DefaultLanguageID;
			}
			set
			{
				if ((this._DefaultLanguageID != value))
				{
					if (this._oxite_Language.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefaultLanguageIDChanging(value);
					this.SendPropertyChanging();
					this._DefaultLanguageID = value;
					this.SendPropertyChanged("DefaultLanguageID");
					this.OnDefaultLanguageIDChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Association(Name="oxite_User_oxite_Comment", Storage="_oxite_Comments", ThisKey="UserID", OtherKey="CreatorUserID")]
		public EntitySet<oxite_Comment> oxite_Comments
		{
			get
			{
				return this._oxite_Comments;
			}
			set
			{
				this._oxite_Comments.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Subscription", Storage="_oxite_Subscriptions", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<oxite_Subscription> oxite_Subscriptions
		{
			get
			{
				return this._oxite_Subscriptions;
			}
			set
			{
				this._oxite_Subscriptions.Assign(value);
			}
		}
		
		[Association(Name="oxite_Language_oxite_User", Storage="_oxite_Language", ThisKey="DefaultLanguageID", OtherKey="LanguageID", IsForeignKey=true)]
		public oxite_Language oxite_Language
		{
			get
			{
				return this._oxite_Language.Entity;
			}
			set
			{
				oxite_Language previousValue = this._oxite_Language.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Language.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Language.Entity = null;
						previousValue.oxite_Users.Remove(this);
					}
					this._oxite_Language.Entity = value;
					if ((value != null))
					{
						value.oxite_Users.Add(this);
						this._DefaultLanguageID = value.LanguageID;
					}
					else
					{
						this._DefaultLanguageID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Language");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Comments(oxite_Comment entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
		
		private void attach_oxite_Subscriptions(oxite_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = this;
		}
		
		private void detach_oxite_Subscriptions(oxite_Subscription entity)
		{
			this.SendPropertyChanging();
			entity.oxite_User = null;
		}
	}
	
	[Table(Name="dbo.oxite_Conferences_ScheduleItemSubscriptionRelationship")]
	public partial class oxite_Conferences_ScheduleItemSubscriptionRelationship : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ScheduleItemID;
		
		private System.Guid _SubscriptionID;
		
		private EntityRef<oxite_Conferences_ScheduleItem> _oxite_Conferences_ScheduleItem;
		
		private EntityRef<oxite_Subscription> _oxite_Subscription;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnScheduleItemIDChanging(System.Guid value);
    partial void OnScheduleItemIDChanged();
    partial void OnSubscriptionIDChanging(System.Guid value);
    partial void OnSubscriptionIDChanged();
    #endregion
		
		public oxite_Conferences_ScheduleItemSubscriptionRelationship()
		{
			this._oxite_Conferences_ScheduleItem = default(EntityRef<oxite_Conferences_ScheduleItem>);
			this._oxite_Subscription = default(EntityRef<oxite_Subscription>);
			OnCreated();
		}
		
		[Column(Storage="_ScheduleItemID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ScheduleItemID
		{
			get
			{
				return this._ScheduleItemID;
			}
			set
			{
				if ((this._ScheduleItemID != value))
				{
					if (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnScheduleItemIDChanging(value);
					this.SendPropertyChanging();
					this._ScheduleItemID = value;
					this.SendPropertyChanged("ScheduleItemID");
					this.OnScheduleItemIDChanged();
				}
			}
		}
		
		[Column(Storage="_SubscriptionID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					if (this._oxite_Subscription.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionID = value;
					this.SendPropertyChanged("SubscriptionID");
					this.OnSubscriptionIDChanged();
				}
			}
		}
		
		[Association(Name="oxite_Conferences_ScheduleItem_oxite_Conferences_ScheduleItemSubscriptionRelation" +
			"ship", Storage="_oxite_Conferences_ScheduleItem", ThisKey="ScheduleItemID", OtherKey="ScheduleItemID", IsForeignKey=true)]
		public oxite_Conferences_ScheduleItem oxite_Conferences_ScheduleItem
		{
			get
			{
				return this._oxite_Conferences_ScheduleItem.Entity;
			}
			set
			{
				oxite_Conferences_ScheduleItem previousValue = this._oxite_Conferences_ScheduleItem.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Conferences_ScheduleItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Conferences_ScheduleItem.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemSubscriptionRelationships.Remove(this);
					}
					this._oxite_Conferences_ScheduleItem.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemSubscriptionRelationships.Add(this);
						this._ScheduleItemID = value.ScheduleItemID;
					}
					else
					{
						this._ScheduleItemID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Conferences_ScheduleItem");
				}
			}
		}
		
		[Association(Name="oxite_Subscription_oxite_Conferences_ScheduleItemSubscriptionRelationship", Storage="_oxite_Subscription", ThisKey="SubscriptionID", OtherKey="SubscriptionID", IsForeignKey=true)]
		public oxite_Subscription oxite_Subscription
		{
			get
			{
				return this._oxite_Subscription.Entity;
			}
			set
			{
				oxite_Subscription previousValue = this._oxite_Subscription.Entity;
				if (((previousValue != value) 
							|| (this._oxite_Subscription.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_Subscription.Entity = null;
						previousValue.oxite_Conferences_ScheduleItemSubscriptionRelationships.Remove(this);
					}
					this._oxite_Subscription.Entity = value;
					if ((value != null))
					{
						value.oxite_Conferences_ScheduleItemSubscriptionRelationships.Add(this);
						this._SubscriptionID = value.SubscriptionID;
					}
					else
					{
						this._SubscriptionID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_Subscription");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.oxite_Subscription")]
	public partial class oxite_Subscription : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SubscriptionID;
		
		private System.Guid _UserID;
		
		private string _UserName;
		
		private string _UserEmail;
		
		private EntitySet<oxite_Conferences_ScheduleItemSubscriptionRelationship> _oxite_Conferences_ScheduleItemSubscriptionRelationships;
		
		private EntityRef<oxite_User> _oxite_User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubscriptionIDChanging(System.Guid value);
    partial void OnSubscriptionIDChanged();
    partial void OnUserIDChanging(System.Guid value);
    partial void OnUserIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserEmailChanging(string value);
    partial void OnUserEmailChanged();
    #endregion
		
		public oxite_Subscription()
		{
			this._oxite_Conferences_ScheduleItemSubscriptionRelationships = new EntitySet<oxite_Conferences_ScheduleItemSubscriptionRelationship>(new Action<oxite_Conferences_ScheduleItemSubscriptionRelationship>(this.attach_oxite_Conferences_ScheduleItemSubscriptionRelationships), new Action<oxite_Conferences_ScheduleItemSubscriptionRelationship>(this.detach_oxite_Conferences_ScheduleItemSubscriptionRelationships));
			this._oxite_User = default(EntityRef<oxite_User>);
			OnCreated();
		}
		
		[Column(Storage="_SubscriptionID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SubscriptionID
		{
			get
			{
				return this._SubscriptionID;
			}
			set
			{
				if ((this._SubscriptionID != value))
				{
					this.OnSubscriptionIDChanging(value);
					this.SendPropertyChanging();
					this._SubscriptionID = value;
					this.SendPropertyChanged("SubscriptionID");
					this.OnSubscriptionIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._oxite_User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_UserEmail", DbType="NVarChar(100)")]
		public string UserEmail
		{
			get
			{
				return this._UserEmail;
			}
			set
			{
				if ((this._UserEmail != value))
				{
					this.OnUserEmailChanging(value);
					this.SendPropertyChanging();
					this._UserEmail = value;
					this.SendPropertyChanged("UserEmail");
					this.OnUserEmailChanged();
				}
			}
		}
		
		[Association(Name="oxite_Subscription_oxite_Conferences_ScheduleItemSubscriptionRelationship", Storage="_oxite_Conferences_ScheduleItemSubscriptionRelationships", ThisKey="SubscriptionID", OtherKey="SubscriptionID")]
		public EntitySet<oxite_Conferences_ScheduleItemSubscriptionRelationship> oxite_Conferences_ScheduleItemSubscriptionRelationships
		{
			get
			{
				return this._oxite_Conferences_ScheduleItemSubscriptionRelationships;
			}
			set
			{
				this._oxite_Conferences_ScheduleItemSubscriptionRelationships.Assign(value);
			}
		}
		
		[Association(Name="oxite_User_oxite_Subscription", Storage="_oxite_User", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public oxite_User oxite_User
		{
			get
			{
				return this._oxite_User.Entity;
			}
			set
			{
				oxite_User previousValue = this._oxite_User.Entity;
				if (((previousValue != value) 
							|| (this._oxite_User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._oxite_User.Entity = null;
						previousValue.oxite_Subscriptions.Remove(this);
					}
					this._oxite_User.Entity = value;
					if ((value != null))
					{
						value.oxite_Subscriptions.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(System.Guid);
					}
					this.SendPropertyChanged("oxite_User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_oxite_Conferences_ScheduleItemSubscriptionRelationships(oxite_Conferences_ScheduleItemSubscriptionRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Subscription = this;
		}
		
		private void detach_oxite_Conferences_ScheduleItemSubscriptionRelationships(oxite_Conferences_ScheduleItemSubscriptionRelationship entity)
		{
			this.SendPropertyChanging();
			entity.oxite_Subscription = null;
		}
	}
}
#pragma warning restore 1591
