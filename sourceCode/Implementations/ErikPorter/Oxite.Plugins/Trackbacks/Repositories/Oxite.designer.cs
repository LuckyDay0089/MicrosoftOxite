#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Plugins.Trackbacks.Repositories
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxiteDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_TrackbackOutbound(oxite_TrackbackOutbound instance);
    partial void Updateoxite_TrackbackOutbound(oxite_TrackbackOutbound instance);
    partial void Deleteoxite_TrackbackOutbound(oxite_TrackbackOutbound instance);
    #endregion
		
		public OxiteDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<oxite_TrackbackOutbound> oxite_TrackbackOutbounds
		{
			get
			{
				return this.GetTable<oxite_TrackbackOutbound>();
			}
		}
	}
	
	[Table(Name="dbo.oxite_TrackbackOutbound")]
	public partial class oxite_TrackbackOutbound : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TrackbackOutboundID;
		
		private string _TargetUrl;
		
		private System.Guid _PostID;
		
		private string _PostTitle;
		
		private string _PostAreaTitle;
		
		private string _PostBody;
		
		private string _PostUrl;
		
		private bool _IsSending;
		
		private byte _RemainingRetryCount;
		
		private System.Nullable<System.DateTime> _SentDate;
		
		private System.Nullable<System.DateTime> _LastAttemptDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackbackOutboundIDChanging(System.Guid value);
    partial void OnTrackbackOutboundIDChanged();
    partial void OnTargetUrlChanging(string value);
    partial void OnTargetUrlChanged();
    partial void OnPostIDChanging(System.Guid value);
    partial void OnPostIDChanged();
    partial void OnPostTitleChanging(string value);
    partial void OnPostTitleChanged();
    partial void OnPostAreaTitleChanging(string value);
    partial void OnPostAreaTitleChanged();
    partial void OnPostBodyChanging(string value);
    partial void OnPostBodyChanged();
    partial void OnPostUrlChanging(string value);
    partial void OnPostUrlChanged();
    partial void OnIsSendingChanging(bool value);
    partial void OnIsSendingChanged();
    partial void OnRemainingRetryCountChanging(byte value);
    partial void OnRemainingRetryCountChanged();
    partial void OnSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSentDateChanged();
    partial void OnLastAttemptDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastAttemptDateChanged();
    #endregion
		
		public oxite_TrackbackOutbound()
		{
			OnCreated();
		}
		
		[Column(Storage="_TrackbackOutboundID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TrackbackOutboundID
		{
			get
			{
				return this._TrackbackOutboundID;
			}
			set
			{
				if ((this._TrackbackOutboundID != value))
				{
					this.OnTrackbackOutboundIDChanging(value);
					this.SendPropertyChanging();
					this._TrackbackOutboundID = value;
					this.SendPropertyChanged("TrackbackOutboundID");
					this.OnTrackbackOutboundIDChanged();
				}
			}
		}
		
		[Column(Storage="_TargetUrl", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string TargetUrl
		{
			get
			{
				return this._TargetUrl;
			}
			set
			{
				if ((this._TargetUrl != value))
				{
					this.OnTargetUrlChanging(value);
					this.SendPropertyChanging();
					this._TargetUrl = value;
					this.SendPropertyChanged("TargetUrl");
					this.OnTargetUrlChanged();
				}
			}
		}
		
		[Column(Storage="_PostID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PostID
		{
			get
			{
				return this._PostID;
			}
			set
			{
				if ((this._PostID != value))
				{
					this.OnPostIDChanging(value);
					this.SendPropertyChanging();
					this._PostID = value;
					this.SendPropertyChanged("PostID");
					this.OnPostIDChanged();
				}
			}
		}
		
		[Column(Storage="_PostTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PostTitle
		{
			get
			{
				return this._PostTitle;
			}
			set
			{
				if ((this._PostTitle != value))
				{
					this.OnPostTitleChanging(value);
					this.SendPropertyChanging();
					this._PostTitle = value;
					this.SendPropertyChanged("PostTitle");
					this.OnPostTitleChanged();
				}
			}
		}
		
		[Column(Storage="_PostAreaTitle", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PostAreaTitle
		{
			get
			{
				return this._PostAreaTitle;
			}
			set
			{
				if ((this._PostAreaTitle != value))
				{
					this.OnPostAreaTitleChanging(value);
					this.SendPropertyChanging();
					this._PostAreaTitle = value;
					this.SendPropertyChanged("PostAreaTitle");
					this.OnPostAreaTitleChanged();
				}
			}
		}
		
		[Column(Storage="_PostBody", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PostBody
		{
			get
			{
				return this._PostBody;
			}
			set
			{
				if ((this._PostBody != value))
				{
					this.OnPostBodyChanging(value);
					this.SendPropertyChanging();
					this._PostBody = value;
					this.SendPropertyChanged("PostBody");
					this.OnPostBodyChanged();
				}
			}
		}
		
		[Column(Storage="_PostUrl", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string PostUrl
		{
			get
			{
				return this._PostUrl;
			}
			set
			{
				if ((this._PostUrl != value))
				{
					this.OnPostUrlChanging(value);
					this.SendPropertyChanging();
					this._PostUrl = value;
					this.SendPropertyChanged("PostUrl");
					this.OnPostUrlChanged();
				}
			}
		}
		
		[Column(Storage="_IsSending", DbType="Bit NOT NULL")]
		public bool IsSending
		{
			get
			{
				return this._IsSending;
			}
			set
			{
				if ((this._IsSending != value))
				{
					this.OnIsSendingChanging(value);
					this.SendPropertyChanging();
					this._IsSending = value;
					this.SendPropertyChanged("IsSending");
					this.OnIsSendingChanged();
				}
			}
		}
		
		[Column(Storage="_RemainingRetryCount", DbType="TinyInt NOT NULL")]
		public byte RemainingRetryCount
		{
			get
			{
				return this._RemainingRetryCount;
			}
			set
			{
				if ((this._RemainingRetryCount != value))
				{
					this.OnRemainingRetryCountChanging(value);
					this.SendPropertyChanging();
					this._RemainingRetryCount = value;
					this.SendPropertyChanged("RemainingRetryCount");
					this.OnRemainingRetryCountChanged();
				}
			}
		}
		
		[Column(Storage="_SentDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> SentDate
		{
			get
			{
				return this._SentDate;
			}
			set
			{
				if ((this._SentDate != value))
				{
					this.OnSentDateChanging(value);
					this.SendPropertyChanging();
					this._SentDate = value;
					this.SendPropertyChanged("SentDate");
					this.OnSentDateChanged();
				}
			}
		}
		
		[Column(Storage="_LastAttemptDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> LastAttemptDate
		{
			get
			{
				return this._LastAttemptDate;
			}
			set
			{
				if ((this._LastAttemptDate != value))
				{
					this.OnLastAttemptDateChanging(value);
					this.SendPropertyChanging();
					this._LastAttemptDate = value;
					this.SendPropertyChanged("LastAttemptDate");
					this.OnLastAttemptDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
