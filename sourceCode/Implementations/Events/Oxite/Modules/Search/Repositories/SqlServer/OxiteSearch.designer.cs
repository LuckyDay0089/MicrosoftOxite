#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4918
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Oxite.Modules.Search.Repositories.SqlServer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="Oxite.Database")]
	public partial class OxiteSearchDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertoxite_SearchResult(oxite_SearchResult instance);
    partial void Updateoxite_SearchResult(oxite_SearchResult instance);
    partial void Deleteoxite_SearchResult(oxite_SearchResult instance);
    #endregion
		
		public OxiteSearchDataContext() : 
				base("Data Source=.\\SQLEXPRESS;Initial Catalog=Oxite.Database;Integrated Security=True", mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OxiteSearchDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<oxite_SearchResult> oxite_SearchResults
		{
			get
			{
				return this.GetTable<oxite_SearchResult>();
			}
		}
	}
	
	[Table(Name="dbo.oxite_SearchResult")]
	public partial class oxite_SearchResult : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _SearchResultID;
		
		private string _SearchResultIndex;
		
		private string _Title;
		
		private string _Body;
		
		private string _Url;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSearchResultIDChanging(System.Guid value);
    partial void OnSearchResultIDChanged();
    partial void OnSearchResultIndexChanging(string value);
    partial void OnSearchResultIndexChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    #endregion
		
		public oxite_SearchResult()
		{
			OnCreated();
		}
		
		[Column(Storage="_SearchResultID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid SearchResultID
		{
			get
			{
				return this._SearchResultID;
			}
			set
			{
				if ((this._SearchResultID != value))
				{
					this.OnSearchResultIDChanging(value);
					this.SendPropertyChanging();
					this._SearchResultID = value;
					this.SendPropertyChanged("SearchResultID");
					this.OnSearchResultIDChanged();
				}
			}
		}
		
		[Column(Storage="_SearchResultIndex", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string SearchResultIndex
		{
			get
			{
				return this._SearchResultIndex;
			}
			set
			{
				if ((this._SearchResultIndex != value))
				{
					this.OnSearchResultIndexChanging(value);
					this.SendPropertyChanging();
					this._SearchResultIndex = value;
					this.SendPropertyChanged("SearchResultIndex");
					this.OnSearchResultIndexChanged();
				}
			}
		}
		
		[Column(Storage="_Title", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[Column(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[Column(Storage="_Url", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
